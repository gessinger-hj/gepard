#!/usr/bin/env node
var fs     = require ( 'fs' ) ;
var spawn  = require ( 'child_process' ).spawn ;
var Gepard = require ( "../src/Gepard" ) ;
var T      = require ( "../src/Tango" ) ;
var Path 	 = require ( "path" ) ;
var Admin  = require ( "../src/Admin" ) ;

var zeroconf = T.getProperty ( "gepard.zeroconf" ) ;
if ( ! zeroconf || ! zeroconf.endsWith ( "0" ) )
{
	new Admin().isRunning ( function admin_is_running ( state )
	{
	  if ( state )
	  {
	    console.log ( "Already running" ) ;
	    return ;
	  }
	  execute() ;
	});
}
else
{
  execute() ;
}
function execute()
{
	console.log ( "Note: does not start the websocket-proxy any more." ) ;
	console.log ( "To include start of the websocket-proxy use gp.broker.web instead." ) ;
	var logDir = Gepard.getLogDirectory() ;
	var dir = Path.join ( logDir, "gp.broker.log" ) ;

	var args = [ Path.join ( __dirname, "../src/Broker" ) ] ;
	for ( var i = 2 ; i < process.argv.length ; i++ )
	{
		args.push ( process.argv[i] ) ;
	}
	if ( T.getProperty ( "help" ) )
	{
		var child = spawn ( 'node', args ) ;
		child.stdout.on('data', function (data) {
	  	console.log(""+data);
		});
		return ;
	}
	var out    = fs.openSync ( dir, 'w' ) ;
	var err    = fs.openSync ( dir, 'w' ) ;

	var child = spawn ( 'node', args, {
	  detached: true,
	  stdio: [ 'ignore', out, err ]
	 });

	child.unref();
}